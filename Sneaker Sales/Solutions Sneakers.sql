DROP DATABASE IF EXISTS Sneaker;
CREATE DATABASE IF NOT EXISTS Sneaker;



### Objective 1: Analyzing Sales Performance

-- 1. What is the total sales amount generated by each sales representative?
SELECT sr.sales_representative_name, SUM(s.sales_amount) AS total_sales
FROM sales s
JOIN sales_representative sr ON s.sales_representative_id = sr.sales_representative_id
GROUP BY sr.sales_representative_name;

-- 2. How many products have been sold in each store location?
SELECT s.store_location, COUNT(s.product_id) AS total_products_sold
FROM sales s
GROUP BY s.store_location;

-- 3. Which product category has the highest total sales amount?
SELECT p.category, SUM(s.sales_amount) AS total_sales
FROM sales s
JOIN products p ON s.product_id = p.product_id
GROUP BY p.category
ORDER BY total_sales DESC
LIMIT 1;

-- 4. What is the average quantity of products sold per sale?
SELECT AVG(s.quantity) AS avg_quantity_per_sale
FROM sales s;

-- 5. Which customer has made the highest number of purchases?
SELECT c.customer_name, COUNT(s.sales_id) AS purchase_count
FROM sales s
JOIN customers c ON s.customer_id = c.customer_id
GROUP BY c.customer_name
ORDER BY purchase_count DESC
LIMIT 1;

-- 6. What is the distribution of total sales amounts across different months?
SELECT EXTRACT(MONTH FROM s.sale_date) AS month, SUM(s.sales_amount) AS total_sales
FROM sales s
GROUP BY month
ORDER BY month;

-- 7. How does the sales performance of different regions compare?
SELECT s.region, SUM(s.sales_amount) AS total_sales
FROM sales s
GROUP BY s.region;

-- 8. What is the total sales amount generated for each product?
SELECT p.product_name, SUM(s.sales_amount) AS total_sales
FROM sales s
JOIN products p ON s.product_id = p.product_id
GROUP BY p.product_name;

-- 9. What is the average sales amount per transaction?
SELECT AVG(s.sales_amount) AS avg_sales_per_transaction
FROM sales s;

-- 10. How many sales transactions were made by each sales representative?
SELECT sr.sales_representative_name, COUNT(s.sales_id) AS transaction_count
FROM sales s
JOIN sales_representative sr ON s.sales_representative_id = sr.sales_representative_id
GROUP BY sr.sales_representative_name;


### Objective 2: Customer and Product Analysis

-- 1. What is the average spending per customer?
SELECT c.customer_name, AVG(s.sales_amount) AS avg_spending
FROM sales s
JOIN customers c ON s.customer_id = c.customer_id
GROUP BY c.customer_name;

-- 2. Which product is the most frequently purchased by customers?
SELECT p.product_name, COUNT(s.product_id) AS purchase_count
FROM sales s
JOIN products p ON s.product_id = p.product_id
GROUP BY p.product_name
ORDER BY purchase_count DESC
LIMIT 1;

-- 3. How many unique customers made purchases in each city?
SELECT c.city, COUNT(DISTINCT s.customer_id) AS unique_customers
FROM sales s
JOIN customers c ON s.customer_id = c.customer_id
GROUP BY c.city;

-- 4. What is the distribution of product categories purchased by customers?
SELECT p.category, COUNT(*) AS purchases
FROM sales s
JOIN products p ON s.product_id = p.product_id
GROUP BY p.category;

-- 5. How many repeat customers are there in the dataset?
SELECT COUNT(DISTINCT s.customer_id) AS repeat_customers
FROM sales s
JOIN customers c ON s.customer_id = c.customer_id
GROUP BY s.customer_id
HAVING COUNT(s.sales_id) > 1;

-- 6. What is the average unit price of products purchased by customers?
SELECT AVG(p.unit_price) AS avg_unit_price
FROM sales s
JOIN products p ON s.product_id = p.product_id;

-- 7. How does the spending behavior differ between customers from different states?
SELECT c.state, AVG(s.sales_amount) AS avg_spending
FROM sales s
JOIN customers c ON s.customer_id = c.customer_id
GROUP BY c.state;

-- 8. Which supplier provides the most popular products?
SELECT sup.supplier_name, COUNT(p.product_id) AS product_count
FROM products p
JOIN suppliers sup ON p.supplier_id = sup.supplier_id
JOIN sales s ON p.product_id = s.product_id
GROUP BY sup.supplier_name
ORDER BY product_count DESC
LIMIT 1;

-- 9. What is the most common product category purchased by customers?
SELECT p.category, COUNT(s.product_id) AS purchase_count
FROM sales s
JOIN products p ON s.product_id = p.product_id
GROUP BY p.category
ORDER BY purchase_count DESC
LIMIT 1;

-- 10. How many customers purchased more than one type of product?
SELECT COUNT(DISTINCT s.customer_id) AS multi_product_customers
FROM sales s
JOIN products p ON s.product_id = p.product_id
GROUP BY s.customer_id
HAVING COUNT(DISTINCT s.product_id) > 1;


### Objective 3: Supplier and Product Performance

-- 1. What is the total sales amount for each supplier?
SELECT sup.supplier_name, SUM(s.sales_amount) AS total_sales
FROM sales s
JOIN products p ON s.product_id = p.product_id
JOIN suppliers sup ON p.supplier_id = sup.supplier_id
GROUP BY sup.supplier_name;

-- 2. Which supplier has the highest average unit price for their products?
SELECT sup.supplier_name, AVG(p.unit_price) AS avg_unit_price
FROM products p
JOIN suppliers sup ON p.supplier_id = sup.supplier_id
GROUP BY sup.supplier_name
ORDER BY avg_unit_price DESC
LIMIT 1;

-- 3. How many different products are provided by each supplier?
SELECT sup.supplier_name, COUNT(DISTINCT p.product_id) AS product_count
FROM products p
JOIN suppliers sup ON p.supplier_id = sup.supplier_id
GROUP BY sup.supplier_name;

-- 4. What is the average total sales amount for products supplied by each supplier?
SELECT sup.supplier_name, AVG(s.sales_amount) AS avg_sales
FROM sales s
JOIN products p ON s.product_id = p.product_id
JOIN suppliers sup ON p.supplier_id = sup.supplier_id
GROUP BY sup.supplier_name;

-- 5. Which supplier's products have the highest total sales quantity?
SELECT sup.supplier_name, SUM(s.quantity) AS total_quantity
FROM sales s
JOIN products p ON s.product_id = p.product_id
JOIN suppliers sup ON p.supplier_id = sup.supplier_id
GROUP BY sup.supplier_name
ORDER BY total_quantity DESC
LIMIT 1;

-- 6. What is the most common category of products supplied by each supplier?
SELECT sup.supplier_name, p.category, COUNT(*) AS category_count
FROM products p
JOIN suppliers sup ON p.supplier_id = sup.supplier_id
GROUP BY sup.supplier_name, p.category
ORDER BY category_count DESC;

-- 7. How does the performance of products from different suppliers compare?
SELECT sup.supplier_name, SUM(s.sales_amount) AS total_sales
FROM sales s
JOIN products p ON s.product_id = p.product_id
JOIN suppliers sup ON p.supplier_id = sup.supplier_id
GROUP BY sup.supplier_name
ORDER BY total_sales DESC;

-- 8. What is the distribution of product categories provided by each supplier?
SELECT sup.supplier_name, p.category, COUNT(*) AS product_count
FROM products p
JOIN suppliers sup ON p.supplier_id = sup.supplier_id
GROUP BY sup.supplier_name, p.category;

-- 9. How many products from each supplier are in the top 10 best-selling products?
SELECT sup.supplier_name, COUNT(DISTINCT p.product_id) AS top_10_best_selling
FROM sales s
JOIN products p ON s.product_id = p.product_id
JOIN suppliers sup ON p.supplier_id = sup.supplier_id
GROUP BY sup.supplier_name
HAVING COUNT(DISTINCT p.product_id) <= 10;

-- 10. What is the average sales amount per product category for each supplier?
SELECT sup.supplier_name, p.category, AVG(s.sales_amount) AS avg_sales
FROM sales s
JOIN products p ON s.product_id = p.product_id
JOIN suppliers sup ON p.supplier_id = sup.supplier_id
GROUP BY sup.supplier_name, p.category;
